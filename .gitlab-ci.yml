stages:
  - build
  - deploy

build-images:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$DOCKER_USER" -p "$DOCKER_PASSWORD"
  script:
    - echo "Build Docker Images For Backend App ..."
    - docker build --pull -t nando2302/backend-express:$CI_COMMIT_SHORT_SHA -f backend/Dockerfile .
    - docker push nando2302/backend-express:$CI_COMMIT_SHORT_SHA
    - echo "Build Docker Images for Frontend App ..."
    - docker build  -f frontend/Dockerfile -t nando2302/frontend-react:$CI_COMMIT_SHORT_SHA .
    - docker push nando2302/frontend-react:$CI_COMMIT_SHORT_SHA
  # only: main

deploy-development:
  stage: deploy
  image: alpine
  services:
    - docker:dind
  before_script:
    - apk add openssh-client
    - eval $(ssh-agent -s)
    - echo "$DEV_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script:
    - ssh -o StrictHostKeyChecking=no $HOST_USER@$IP_ADDRESS_DEV "rm -rf  binar/ webserver/"
    - ssh -o StrictHostKeyChecking=no $HOST_USER@$IP_ADDRESS_DEV "mkdir  binar webserver"
    - scp -o StrictHostKeyChecking=no docker-compose-development.yml  $HOST_USER@$IP_ADDRESS_DEV:binar
    - scp -o StrictHostKeyChecking=no nginx/dev.conf dev-nginx-ssl.sh $HOST_USER@$IP_ADDRESS_DEV:webserver
    - ssh -o StrictHostKeyChecking=no $HOST_USER@$IP_ADDRESS_DEV " cd ~/binar && mkdir database"
    - scp -o StrictHostKeyChecking=no database/crud_db.sql $HOST_USER@$IP_ADDRESS_DEV:binar/database/
    - scp -o StrictHostKeyChecking=no nginx/dev.conf $HOST_USER@$IP_ADDRESS_DEV:binar
    - echo "sukses"
    - ssh -o StrictHostKeyChecking=no $HOST_USER@$IP_ADDRESS_DEV "cd ~/binar/ && IMAGE_TAG=$CI_COMMIT_SHORT_SHA IP_ADDRESS=$IP_ADDRESS_DEV  docker compose -f docker-compose-development.yml up -d --force-recreate"
    - echo "sukses"
  after_script:

deploy-production:
  stage: deploy
  image: alpine
  services:
    - docker:dind
  before_script:
    - apk add openssh-client
    - apk add gettext
    - eval $(ssh-agent -s)
    - echo "$PROD_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script:
    - envsubst < .env.example > .env
    - ssh -o StrictHostKeyChecking=no $HOST_USER@$IP_ADDRESS_PROD "mkdir  binar"
    - scp -o StrictHostKeyChecking=no .env docker-compose.yml $HOST_USER@$IP_ADDRESS_PROD:binar
    - ssh -o StrictHostKeyChecking=no $HOST_USER@$IP_ADDRESS_PROD "cat ~/binar/.env"
    - ssh -o StrictHostKeyChecking=no $HOST_USER@$IP_ADDRESS_PROD "cat ~/binar/docker-compose.yml"
    - ssh -o StrictHostKeyChecking=no $HOST_USER@$IP_ADDRESS_PROD "cd ~/binar &&
      IMAGE_TAG=$CI_COMMIT_SHORT_SHA
      IP_ADDRESS=$IP_ADDRESS_PROD
      docker compose up -d --force-recreate"
    - echo "sukses"
    - ssh -o StrictHostKeyChecking=no $HOST_USER@$IP_ADDRESS_PROD "rm -rf  binar/"
  when: manual
